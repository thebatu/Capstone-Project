[1mdiff --git a/app/build.gradle b/app/build.gradle[m
[1mindex ab87bbe..7ae0a86 100644[m
[1m--- a/app/build.gradle[m
[1m+++ b/app/build.gradle[m
[36m@@ -54,7 +54,7 @@[m [mdependencies {[m
     implementation 'com.jakewharton:butterknife:9.0.0-rc2'[m
     annotationProcessor 'com.jakewharton:butterknife-compiler:9.0.0-rc2'[m
     implementation 'com.google.firebase:firebase-core:16.0.5'[m
[31m-    implementation 'com.google.firebase:firebase-firestore:17.1.3'[m
[32m+[m[32m    implementation 'com.google.firebase:firebase-database:16.0.5'[m
 [m
 [m
 }[m
[1mdiff --git a/app/schemas/com.example.bats.homefoodie.database.HomeFoodieDatabase/1.json b/app/schemas/com.example.bats.homefoodie.database.HomeFoodieDatabase/1.json[m
[1mindex 792e71c..5596514 100644[m
[1m--- a/app/schemas/com.example.bats.homefoodie.database.HomeFoodieDatabase/1.json[m
[1m+++ b/app/schemas/com.example.bats.homefoodie.database.HomeFoodieDatabase/1.json[m
[36m@@ -2,7 +2,7 @@[m
   "formatVersion": 1,[m
   "database": {[m
     "version": 1,[m
[31m-    "identityHash": "2b849cad85a737fa1a59876b365e076d",[m
[32m+[m[32m    "identityHash": "6be8744811673ef2f8eeff344973a7c0",[m
     "entities": [[m
       {[m
         "tableName": "user",[m
[36m@@ -65,7 +65,7 @@[m
       },[m
       {[m
         "tableName": "dish",[m
[31m-        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `userId` INTEGER NOT NULL, `name` TEXT, `price` INTEGER NOT NULL, `description` TEXT, `kitchen_name` TEXT, FOREIGN KEY(`userId`) REFERENCES `user`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",[m
[32m+[m[32m        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `userId` TEXT, `name` TEXT, `price` INTEGER NOT NULL, `description` TEXT, `kitchen_name` TEXT, FOREIGN KEY(`userId`) REFERENCES `user`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",[m
         "fields": [[m
           {[m
             "fieldPath": "id",[m
[36m@@ -76,8 +76,8 @@[m
           {[m
             "fieldPath": "userId",[m
             "columnName": "userId",[m
[31m-            "affinity": "INTEGER",[m
[31m-            "notNull": true[m
[32m+[m[32m            "affinity": "TEXT",[m
[32m+[m[32m            "notNull": false[m
           },[m
           {[m
             "fieldPath": "name",[m
[36m@@ -196,7 +196,7 @@[m
     ],[m
     "setupQueries": [[m
       "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",[m
[31m-      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \"2b849cad85a737fa1a59876b365e076d\")"[m
[32m+[m[32m      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \"6be8744811673ef2f8eeff344973a7c0\")"[m
     ][m
   }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/com/example/bats/homefoodie/database/dishDatabase/DishEntry.java b/app/src/main/java/com/example/bats/homefoodie/database/dishDatabase/DishEntry.java[m
[1mindex 2fe4023..007dac1 100644[m
[1m--- a/app/src/main/java/com/example/bats/homefoodie/database/dishDatabase/DishEntry.java[m
[1m+++ b/app/src/main/java/com/example/bats/homefoodie/database/dishDatabase/DishEntry.java[m
[36m@@ -20,7 +20,7 @@[m [mpublic class DishEntry {[m
 [m
     @PrimaryKey(autoGenerate = true)[m
     private int id;[m
[31m-    private int userId;[m
[32m+[m[32m    private String userId;[m
     private String name;[m
     private int price;[m
     private String description;[m
[36m@@ -30,7 +30,7 @@[m [mpublic class DishEntry {[m
     private List<Ingredient> ingredientList;[m
 [m
     @Ignore[m
[31m-    public DishEntry(int userId, String name, int price, String description, String kitchen_name) {[m
[32m+[m[32m    public DishEntry(String userId, String name, int price, String description, String kitchen_name) {[m
         this.userId = userId;[m
         this.name = name;[m
         this.price = price;[m
[36m@@ -39,7 +39,7 @@[m [mpublic class DishEntry {[m
     }[m
 [m
 [m
[31m-    public DishEntry(int id, int userId, String name, int price, String description, String kitchen_name) {[m
[32m+[m[32m    public DishEntry(int id, String userId, String name, int price, String description, String kitchen_name) {[m
         this.id = id;[m
         this.userId = userId;[m
         this.name = name;[m
[36m@@ -49,8 +49,7 @@[m [mpublic class DishEntry {[m
     }[m
 [m
 [m
[31m-[m
[31m-[m
[32m+[m[32m    public DishEntry(){}[m
 [m
 [m
 [m
[36m@@ -58,11 +57,11 @@[m [mpublic class DishEntry {[m
         this.id = id;[m
     }[m
 [m
[31m-    public int getUserId() {[m
[32m+[m[32m    public String getUserId() {[m
         return userId;[m
     }[m
 [m
[31m-    public void setUserId(int userId) {[m
[32m+[m[32m    public void setUserId(String userId) {[m
         this.userId = userId;[m
     }[m
 [m
[1mdiff --git a/app/src/main/java/com/example/bats/homefoodie/database/dishDatabase/Ingredient.java b/app/src/main/java/com/example/bats/homefoodie/database/dishDatabase/Ingredient.java[m
[1mindex 28ff6aa..e018ca2 100644[m
[1m--- a/app/src/main/java/com/example/bats/homefoodie/database/dishDatabase/Ingredient.java[m
[1m+++ b/app/src/main/java/com/example/bats/homefoodie/database/dishDatabase/Ingredient.java[m
[36m@@ -32,6 +32,7 @@[m [mpublic class Ingredient {[m
         this.quantity = quantity;[m
         this.name = name;[m
     }[m
[32m+[m[32m    public  Ingredient(){}[m
 [m
 [m
     public int getDishId() {[m
[1mdiff --git a/app/src/main/java/com/example/bats/homefoodie/database/userDatabase/UserDao.java b/app/src/main/java/com/example/bats/homefoodie/database/userDatabase/UserDao.java[m
[1mindex e0a5246..70a8d91 100644[m
[1m--- a/app/src/main/java/com/example/bats/homefoodie/database/userDatabase/UserDao.java[m
[1m+++ b/app/src/main/java/com/example/bats/homefoodie/database/userDatabase/UserDao.java[m
[36m@@ -9,7 +9,6 @@[m [mimport android.arch.persistence.room.Query;[m
 import android.arch.persistence.room.Update;[m
 [m
 import com.example.bats.homefoodie.database.HomeFoodieDatabase;[m
[31m-import com.example.bats.homefoodie.database.userDatabase.UserEntry;[m
 [m
 import java.util.List;[m
 [m
[36m@@ -35,7 +34,7 @@[m [mpublic interface UserDao {[m
      * @return a user[m
      */[m
     @Query("SELECT * FROM user WHERE user.id == :id")[m
[31m-    LiveData<List<UserEntry>> getUser(int id);[m
[32m+[m[32m    List getUser(int id);[m
 [m
 [m
     @Update(onConflict = OnConflictStrategy.REPLACE)[m
[1mdiff --git a/app/src/main/java/com/example/bats/homefoodie/database/userDatabase/UserEntry.java b/app/src/main/java/com/example/bats/homefoodie/database/userDatabase/UserEntry.java[m
[1mindex 8f210b0..f63b600 100644[m
[1m--- a/app/src/main/java/com/example/bats/homefoodie/database/userDatabase/UserEntry.java[m
[1m+++ b/app/src/main/java/com/example/bats/homefoodie/database/userDatabase/UserEntry.java[m
[36m@@ -43,6 +43,7 @@[m [mpublic class UserEntry {[m
         this.isSeller = isSeller;[m
     }[m
 [m
[32m+[m[32m    public UserEntry() {}[m
 [m
     public int getId() {[m
         return id;[m
[1mdiff --git a/app/src/main/java/com/example/bats/homefoodie/database/userDatabase/UserPojo.java b/app/src/main/java/com/example/bats/homefoodie/database/userDatabase/UserPojo.java[m
[1mindex d9663a2..a1ab9ae 100644[m
[1m--- a/app/src/main/java/com/example/bats/homefoodie/database/userDatabase/UserPojo.java[m
[1m+++ b/app/src/main/java/com/example/bats/homefoodie/database/userDatabase/UserPojo.java[m
[36m@@ -1,4 +1,22 @@[m
 package com.example.bats.homefoodie.database.userDatabase;[m
 [m
 public class UserPojo {[m
[32m+[m
[32m+[m[32m    int id;[m
[32m+[m[32m    String address;[m
[32m+[m[32m    String businessName;[m
[32m+[m[32m    String isSeller;[m
[32m+[m[32m    String name;[m
[32m+[m
[32m+[m[32m    public UserPojo(int id, String address, String businessName, String isSeller, String name) {[m
[32m+[m[32m        this.id = id;[m
[32m+[m[32m        this.address = address;[m
[32m+[m[32m        this.businessName = businessName;[m
[32m+[m[32m        this.isSeller = isSeller;[m
[32m+[m[32m        this.name = name;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public UserPojo() {[m
[32m+[m
[32m+[m[32m    }[m
 }[m
[1mdiff --git a/app/src/main/java/com/example/bats/homefoodie/ui/list/MainActivity.java b/app/src/main/java/com/example/bats/homefoodie/ui/list/MainActivity.java[m
[1mindex 9eae924..4b96a6e 100644[m
[1m--- a/app/src/main/java/com/example/bats/homefoodie/ui/list/MainActivity.java[m
[1m+++ b/app/src/main/java/com/example/bats/homefoodie/ui/list/MainActivity.java[m
[36m@@ -1,6 +1,5 @@[m
 package com.example.bats.homefoodie.ui.list;[m
 [m
[31m-import android.arch.lifecycle.ViewModelProviders;[m
 import android.content.Context;[m
 import android.os.Bundle;[m
 import android.support.annotation.NonNull;[m
[36m@@ -16,16 +15,15 @@[m [mimport android.widget.ProgressBar;[m
 import android.widget.Toast;[m
 [m
 import com.example.bats.homefoodie.R;[m
[31m-import com.example.bats.homefoodie.ui.MainViewModelFactory;[m
[32m+[m[32mimport com.example.bats.homefoodie.database.userDatabase.UserPojo;[m
 import com.example.bats.homefoodie.ui.detail.DishDetailFragment;[m
[31m-import com.example.bats.homefoodie.utilities.InjectorUtils;[m
[31m-import com.google.android.gms.tasks.OnFailureListener;[m
[31m-import com.google.android.gms.tasks.OnSuccessListener;[m
[31m-import com.google.firebase.firestore.DocumentReference;[m
[31m-import com.google.firebase.firestore.FirebaseFirestore;[m
[32m+[m[32mimport com.google.firebase.database.DataSnapshot;[m
[32m+[m[32mimport com.google.firebase.database.DatabaseError;[m
[32m+[m[32mimport com.google.firebase.database.DatabaseReference;[m
[32m+[m[32mimport com.google.firebase.database.FirebaseDatabase;[m
[32m+[m[32mimport com.google.firebase.database.ValueEventListener;[m
 [m
 import java.util.HashMap;[m
[31m-import java.util.List;[m
 import java.util.Map;[m
 [m
 import butterknife.BindView;[m
[36m@@ -36,8 +34,9 @@[m [mimport butterknife.ButterKnife;[m
  */[m
 public class MainActivity extends AppCompatActivity implements DishesAdapter.OnItemClickListener  {[m
 [m
[31m-[m
[31m-    private DocumentReference mDocRef = FirebaseFirestore.getInstance().document("Users/Joe");[m
[32m+[m[32m    DatabaseReference mRootRef = FirebaseDatabase.getInstance().getReference();[m
[32m+[m[32m    DatabaseReference mConditionRef = mRootRef.child("Uid");[m
[32m+[m[32m    DatabaseReference mConditionRef2 = mRootRef.child("Uid");[m
 [m
     //mainActivity viewModel[m
     DishesViewModel mDishesViewModel;[m
[36m@@ -88,19 +87,26 @@[m [mpublic class MainActivity extends AppCompatActivity implements DishesAdapter.OnI[m
         mDishesAdapter = new DishesAdapter(this, this);[m
         mDishesRecyclerView.setAdapter(mDishesAdapter);[m
 [m
[31m-        MainViewModelFactory factory = InjectorUtils.provideDishesViewModelFactory(this[m
[31m-                .getApplicationContext());[m
[31m-        mDishesViewModel = ViewModelProviders.of(this, factory).get(DishesViewModel.class);[m
[31m-        mDishesViewModel.getAllDishes().observe(this, dishWithIngredients -> {[m
[31m-            if (dishWithIngredients == null) {[m
[31m-                showLoading();[m
[31m-            }else {[m
[31m-                showMainDishDataView();[m
[31m-                mDishesAdapter.swapDishes(dishWithIngredients);[m
[31m-            }[m
[31m-        });[m
[32m+[m[32m//        MainViewModelFactory factory = InjectorUtils.provideDishesViewModelFactory(this[m
[32m+[m[32m//                .getApplicationContext());[m
[32m+[m[32m//        mDishesViewModel = ViewModelProviders.of(this, factory).get(DishesViewModel.class);[m
[32m+[m[32m//        mDishesViewModel.getAllDishes().observe(this, dishWithIngredients -> {[m
[32m+[m[32m//            if (dishWithIngredients == null) {[m
[32m+[m[32m//                showLoading();[m
[32m+[m[32m//            }else {[m
[32m+[m[32m//                showMainDishDataView();[m
[32m+[m[32m//                mDishesAdapter.swapDishes(dishWithIngredients);[m
[32m+[m[32m//            }[m
[32m+[m[32m//        });[m
 [m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    protected void onStart() {[m
[32m+[m[32m        super.onStart();[m
         insertUser();[m
[32m+[m
[32m+[m
     }[m
 [m
     private void insertUser() {[m
[36m@@ -110,18 +116,38 @@[m [mpublic class MainActivity extends AppCompatActivity implements DishesAdapter.OnI[m
         Map<String, Object> dataToSave = new HashMap<>();[m
         dataToSave.put("USER_NAME", user_name);[m
         dataToSave.put("USER_AGE", user_age);[m
[31m-        mDocRef.set(dataToSave).addOnSuccessListener(new OnSuccessListener<Void>() {[m
[32m+[m
[32m+[m[32m        mConditionRef.addValueEventListener(new ValueEventListener() {[m
             @Override[m
[31m-            public void onSuccess(Void aVoid) {[m
[31m-                Log.d("TAGTAG", "Document has been saved");[m
[32m+[m[32m            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {[m
[32m+[m[32m                UserPojo baturay = dataSnapshot.getValue(UserPojo.class);[m
[32m+[m[32m                Log.d("snapShot", "!!!!!!!!!!" + baturay);[m
             }[m
[31m-        }).addOnFailureListener(new OnFailureListener() {[m
[32m+[m
             @Override[m
[31m-            public void onFailure(@NonNull Exception e) {[m
[31m-                Log.w("TAGTAG", "Failed to save docuement");[m
[32m+[m[32m            public void onCancelled(@NonNull DatabaseError databaseError) {[m
[32m+[m
             }[m
         });[m
 [m
[32m+[m[32m//        mConditionRef2.addValueEventListener(new ValueEventListener() {[m
[32m+[m[32m//            @Override[m
[32m+[m[32m//            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {[m
[32m+[m[32m//                UserEntry dishes = dataSnapshot.getValue(UserEntry.class);[m
[32m+[m[32m//                UserDao userDao = HomeFoodieDatabase.getInstance(context).userDao();[m
[32m+[m[32m//                //create user[m
[32m+[m[32m//                //userDao.getUser(1);[m
[32m+[m[32m//                //userDao.insertUser(dishes);[m
[32m+[m[32m//                List userEntry= userDao.getUser(1);[m
[32m+[m[32m//[m
[32m+[m[32m//            }[m
[32m+[m[32m//[m
[32m+[m[32m//            @Override[m
[32m+[m[32m//            public void onCancelled(@NonNull DatabaseError databaseError) {[m
[32m+[m[32m//[m
[32m+[m[32m//            }[m
[32m+[m[32m//        });[m
[32m+[m
 [m
 [m
     }[m
[1mdiff --git a/app/src/main/java/test.json b/app/src/main/java/test.json[m
[1mindex e69de29..a8f427e 100644[m
[1m--- a/app/src/main/java/test.json[m
[1m+++ b/app/src/main/java/test.json[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "Uid": {[m
[32m+[m[32m    "id": "",[m
[32m+[m[32m    "name": "",[m
[32m+[m[32m    "address": "",[m
[32m+[m[32m    "isSeller": "",[m
[32m+[m[32m    "businessName": ""[m
[32m+[m[32m  },[m
[32m+[m[32m  "null": null,[m
[32m+[m[32m  "number": 123,[m
[32m+[m[32m  "dishes": {[m
[32m+[m[32m    ":id": {[m
[32m+[m[32m      "id": "1",[m
[32m+[m[32m      "userId": "Uid",[m
[32m+[m[32m      "name": "chipzi pasta",[m
[32m+[m[32m      "quantity": "5",[m
[32m+[m[32m      "description": "Lorem Ipsum akjs jksajkshd kjsdjka hjgjfhgfl hfjkgkjfds",[m
[32m+[m[32m      "ingredient": {[m
[32m+[m[32m        "id": {[m
[32m+[m[32m          "dishid": "jj",[m
[32m+[m[32m          "quantity": "duqntity",[m
[32m+[m[32m          "name": "fsdfsdf"[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "string": "Hello World"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
\ No newline at end of file[m
